apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: example-argogyu-
spec:
  entrypoint: app-match
  podGC:
    strategy: OnWorkflowSuccess
  volumeClaimTemplates:
    - metadata:
        name: temp-git
      spec:
        storageClassName: "rbd"
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 100Mi
  templates:
    - name: app-match
      steps:
        - - name: copy1
            template: copy-git-workflow
        - - name: copy2
            template: copy-git-go
        - - name: parse
            template: parse-image
        - - name: makevaluefile
            template: make-value-file
        - - name: gitchange
            template: git-change

    - name: copy-git-workflow
      inputs:
        artifacts:
        - name: temporary-git
          path: /github/argogyu
          git:
            repo: https://github.com/rbxorkt12/argogyu.git
      container:
        image: alpine:3.8
        command: [sh, -c]
        args: ["
          ls -al /github/argogyu;
          cp -r /github/argogyu /tmp;
          ls -al /tmp;
        "]
        volumeMounts:
        - name: temp-git
          mountPath: /tmp

    - name: copy-git-go
      inputs:
        artifacts:
        - name: go-git
          path: /github/apposync
          git:
            repo: https://github.com/rbxorkt12/apposync.git
      container:
        image: ubuntu
        command: [sh, -c]
        args: ["
          ls -al /github/apposync;
          cp -r /github/apposync /go;
          ls -al /go;
        "]
        volumeMounts:
        - name: temp-git
          mountPath: /go

    - name: parse-image
      container:
        image: ubuntu
        command: [sh, -c]
        args: ["
          ls -al /tmp/argogyu;
          /go/apposync/parse/parse;
          cat /tmp/parse_images.txt;
          cat /tmp/parse_repoes.txt;
        "]
        volumeMounts:
        - name: temp-git
          mountPath: /tmp
        - name: temp-git
          mountPath: /go

    - name: make-value-file
      container:
        image: golang:1.8
        volumeMounts:
        - name: temp-git
          mountPath: /tmp
        - name: temp-git
          mountPath: /go
        command: [sh, -c]
        args: ["
          ls -al /go/apposync/makenewimage;
          /go/apposync/makenewimage/make;
          echo 'imageversion value';
          cat /tmp/IMAGEVERSIONS
        "]

    - name: git-change
      inputs:
        artifacts:
        - name: go-git
          path: /argogyu
          git:
            repo: https://github.com/rbxorkt12/argogyu.git
            usernameSecret:
              name: github-creds
              key: username
            passwordSecret:
              name: github-creds
              key: password
      script:
        image: ceregousa/ubuntu-git
        volumeMounts: 
        - name: temp-git
          mountPath: /tmp
        command: [bash]
        source: |
          cd /
          cp -r /tmp/IMAGEVERSIONS /argogyu
          cd /argogyu
          if [ "git status | grep nothing" ]; then
                echo 'No image version change'
          else
                git add IMAGEVERSION && git commit -m 'IMAGEVERSION change'
                git push --force
          fi
